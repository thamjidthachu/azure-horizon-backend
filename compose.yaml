x-backend: &backend-image
  image: the_backend_image:latest
  build: 
    context: .
    dockerfile: Dockerfile

services:      
  backend:
    <<: *backend-image
    container_name: the_backend
    env_file:
      - .env
    ports:
      - "8000:8000"
    deploy:
      resources:
        limits:
          cpus: '.05'
          memory: 256M
        reservations:
          cpus: '0.05'
          memory: 256M
    volumes:
      - the_azure_horizon-static-data:/app/staticfiles
      - the_azure_horizon-media-data:/app/media
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  celery-worker:
    image: the_backend_image:latest
    container_name: the_celery_worker
    env_file:
      - .env
    command: celery -A resortproject worker --loglevel=info
    volumes:
      - the_azure_horizon-media-data:/app/media
    depends_on:
      backend:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '.05'
          memory: 256M
        reservations:
          cpus: '0.05'
          memory: 256M

  celery-beat:
    image: the_backend_image:latest
    container_name: the_celery_beat
    env_file:
      - .env
    command: celery -A resortproject beat --loglevel=info
    volumes:
      - the_azure_horizon-media-data:/app/media
    depends_on:
      backend:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '.05'
          memory: 128M
        reservations:
          cpus: '0.05'
          memory: 128M

  redis:
    container_name: the_redis
    image: redis:7-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '.05'
          memory: 128M
        reservations:
          cpus: '0.05'
          memory: 128M

  postgres:
    container_name: the_database
    image: postgres:15
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - the_azure_horizon-postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  the_azure_horizon-postgres-data:
  the_azure_horizon-media-data:
  the_azure_horizon-static-data:
